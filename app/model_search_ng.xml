<?xml version="1.0" encoding="UTF-8" ?>
<!-- This is a WordPress eXtended RSS file generated by WordPress as an export of your site. -->
<!-- It contains information about your site's posts, pages, comments, categories, and other content. -->
<!-- You may use this file to transfer that content from one site to another. -->
<!-- This file is not intended to serve as a complete backup of your site. -->

<!-- To import this information into a WordPress site follow these steps: -->
<!-- 1. Log in to that site as an administrator. -->
<!-- 2. Go to Tools: Import in the WordPress admin panel. -->
<!-- 3. Install the "WordPress" importer from the list. -->
<!-- 4. Activate & Run Importer. -->
<!-- 5. Upload this file using the form provided on that page. -->
<!-- 6. You will first be asked to map the authors in this export file to users -->
<!--    on the site. For each author, you may choose to map to an -->
<!--    existing user on the site or to create a new user. -->
<!-- 7. WordPress will then import each of the posts, pages, comments, categories, etc. -->
<!--    contained in this file into your site. -->

<!-- generator="WordPress/3.8.1" created="2014-04-03 14:07" -->
<rss version="2.0"
	xmlns:excerpt="http://wordpress.org/export/1.1/excerpt/"
	xmlns:content="http://purl.org/rss/1.0/modules/content/"
	xmlns:wfw="http://wellformedweb.org/CommentAPI/"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:wp="http://wordpress.org/export/1.1/"
>

<channel>
	<title>Mau Test Site</title>
	<link>http://mau.wpdlr.co</link>
	<description>Just another wpdlr Sites site</description>
	<pubDate>Thu, 03 Apr 2014 14:07:32 +0000</pubDate>
	<language></language>
	<wp:wxr_version>1.1</wp:wxr_version>
	<wp:base_site_url>http://wpdlr.co/</wp:base_site_url>
	<wp:base_blog_url>http://mau.wpdlr.co</wp:base_blog_url>



	<generator>http://wordpress.org/?v=3.8.1</generator>

	<item>
		<title>content: model search ng</title>
		<link>http://mau.wpdlr.co/view/content-model-search-ng/</link>
		<pubDate>Wed, 30 Oct 2013 18:26:09 +0000</pubDate>
		<dc:creator>mauricio</dc:creator>
		<guid isPermaLink="false">http://vw-test.wpdlr.co/view/page-vehicle-search-fdt-2/</guid>
		<description></description>
		<content:encoded><![CDATA[]]></content:encoded>
		<excerpt:encoded><![CDATA[]]></excerpt:encoded>
		<wp:post_id>97552</wp:post_id>
		<wp:post_date>2013-10-30 18:26:09</wp:post_date>
		<wp:post_date_gmt>2013-10-30 18:26:09</wp:post_date_gmt>
		<wp:comment_status>closed</wp:comment_status>
		<wp:ping_status>closed</wp:ping_status>
		<wp:post_name>content-model-search-ng</wp:post_name>
		<wp:status>publish</wp:status>
		<wp:post_parent>0</wp:post_parent>
		<wp:menu_order>0</wp:menu_order>
		<wp:post_type>view</wp:post_type>
		<wp:post_password></wp:post_password>
		<wp:is_sticky>0</wp:is_sticky>
		<wp:postmeta>
			<wp:meta_key>html</wp:meta_key>
						<wp:meta_value><![CDATA[  <div ng-controller="baseCtrl" ng-view></div>
</div>
<!-- vehicleModelSearchApp  -->

<script src="//cdnjs.cloudflare.com/ajax/libs/angular.js/1.2.10/angular.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/angular.js/1.2.10/angular-route.min.js"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/lodash.js/2.4.1/lodash.min.js"></script>
<script type="text/javascript">
  angular.module('vehicleModelSearchApp', ['ngRoute'])
    .config(['$routeProvider', '$locationProvider',
      function ($routeProvider, $locationProvider) {
        $routeProvider
          .when('/', {
            templateUrl: 'main.html'
          })
          .when('/model/:model', {
            controller: 'trimCtrl',
            templateUrl: 'trim.html'
          })
          .when('/model/:model/trim/:trim', {
            controller: 'colorCtrl',
            templateUrl: 'color.html'
          })
          .when('/model/:model/trim/:trim/color/:ext_color_code', {
            controller: 'quoteCtrl',
            templateUrl: 'quote.html'
          })
          .otherwise({
            redirectTo: '/'
          });
        $locationProvider.html5Mode(false);
      }
    ])
    .constant('_', _)
    .controller('trimCtrl', function ($scope, $log, $routeParams) {
      $scope.subase = {
        ele: _.findIndex($scope.baseF.modelTrim, $routeParams),
        current: $routeParams
      };
      // $log.info($routeParams, $scope.baseF.modelTrim, $scope.subase.ele);
    })
    .controller('colorCtrl', function ($scope, $log, $routeParams) {
      $scope.subase = {
        ele: _.findIndex($scope.baseF.modelTrimColor, $routeParams),
        current: $routeParams
      };
      // $log.info($routeParams, _.find($scope.baseF.modelTrimColor, { trim: $routeParams.trim }), $scope.subase.sel);
    })
    .controller('quoteCtrl', function ($scope, $log, $routeParams) {
      $scope.subase = {
        sel: _.find($scope.base.collection, $routeParams),
        element_hash: '{element_hash}',
        the_permalink: '{the_permalink}',
        qtypeSelected: 'lease',
        creditRating: 'great',
        leaseTerm: '24',
        milesYear: '10,000',
        financeTerm: '24'
      };
      // $log.info($routeParams, $scope.subase.sel);
    })
    .controller('baseCtrl', function ($scope, $log, $http) {
      var basicParams = {
        f: 'json',
        show: 'all',
        type: 'new',
        d: 'vehicles',
        make: '{setup_dealer_primary_make}',
        e: 'trim,evox_vif,ext_color_code,msrp'
      };
      var groupParams = _.assign({
        q: 'group=year,model,trim,exterior_color',
        k: 'year,model,trim,evox_vif,ext_color_code,exterior_color,msrp'
      }, basicParams);
      var inventoryParams = _.assign({
        k: 'year,model,trim,ext_color_code'
      }, basicParams);
      var cleanData = function (data) {
        return _.map(data, function (ele) {
          return _.assign(ele, {
            modelLabel: ele.model,
            trimLabel: ele.trim,
            model: ele.model.replace(' ', '_'),
            trim: ele.trim.replace(' ', '_').replace('/', '*')
          });
        });
      };
      var createTree = function (data) {
        var tree = {};
        tree.ttsrc = '{src}';
        tree.yearArray = _.map(_.uniq(data, 'year'), function (ele) {
          ele.yearlabel = ele.year;
          return ele;
        });
        tree.yearSelected = tree.yearArray[0];
        tree.collection = _.sortBy(data, 'ext_color_code').reverse();
        return tree;
      };
      var filterCollection = function () {
        var data = _.where($scope.base.collection, { year: $scope.base.yearSelected.year });
        var tree = {};
        tree.models = (function () {
          var msrpuniq = _.uniq(_.sortBy(data, 'msrp'), 'model');
          var modeluniq = _.map(_.uniq(data, 'model'), function (ele) {
            ele.msrpmodel = _.find(msrpuniq, { model: ele.model }).msrp;
            return ele;
          });
          return _.sortBy(modeluniq, 'model');
        }());
        tree.modelTrim = _.map(tree.models, function (ele) {
          var trims = _.where(data, {
            model: ele.model
          });
          var trimsort = _.sortBy(trims, 'msrp');
          return {
            model: ele.model,
            trimuniq: _.sortBy(
              _.map(
                _.uniq(trims, 'trim'), function (ele) {
                  ele.msrptrim = _.find(trimsort, { trim: ele.trim }).msrp;
                  return ele;
                }
              ), 'msrp')
          }
        });
        tree.modelTrimColor = _.flatten(_.map(tree.modelTrim, function (ele) {
          var trimarray = _.map(ele.trimuniq, function (oto) {
            var colors = _.where(data, {
              model: oto.model,
              trim: oto.trim
            });
            return {
              model: oto.model,
              trim: oto.trim,
              colors: _.sortBy(_.uniq(colors, 'ext_color_code'), 'msrp')
            };
          });
          return trimarray;
        }));
        return tree;
      };
      var splityear = function (data) {
        // split the inventory collection by year
        // $log.info('yearArray',$scope.base.yearArray);
        var split = [];
        for (var i = $scope.base.yearArray.length - 1; i >= 0; i--) {
          split.push({
            year: $scope.base.yearArray[i].year,
            vehicles: _.where(data, { year: $scope.base.yearArray[i].year })
          });
        };
        return split;
      };
      var updateYearSel =  function () {
        // modify yearArray -> yearlabel
        _.forEach($scope.base.yearArray, function (ele) {
          var yearele = _.find($scope.vehicles, { year: ele.yearlabel });
          ele.yearlabel = ele.yearlabel + ' - (' + yearele.vehicles.length + ' vehicles)';
        });
      };
      var countCollection = function () {
        // process the inventory and assign the new attribute to the base.collection
        if (_.isEmpty($scope.baseF.models[0].modelCount)) {
          var vehicleset = _.find($scope.vehicles, { year: $scope.base.yearSelected.year }).vehicles;
          _.forEach($scope.baseF.models, function (ele) {
            ele.modelCount = _.where(vehicleset, { model: ele.modelLabel }).length;
          });
          _.forEach($scope.baseF.modelTrim, function (ele) {
            _.forEach(ele.trimuniq, function (sub) {
              sub.trimCount = _.where(vehicleset, { model: ele.model.replace('_',' '), trim: sub.trimLabel }).length;
            });
          });
          _.forEach($scope.baseF.modelTrimColor, function (ele) {
            _.forEach(ele.colors, function (sub) {
              sub.colorCount = _.where(vehicleset, { model: ele.model.replace('_',' '), trim: ele.trim.replace('_',' '), ext_color_code: sub.ext_color_code }).length;
            });
          });
        }
      };
      $scope.base = {};
      $scope.vehicles = [];
      $scope.$watch('base.yearSelected', function (newv, oldv) {
        if (newv) {
          $scope.baseF = filterCollection();
          if (!_.isEmpty($scope.vehicles)) {
            countCollection();
          }
        }
      });
      $scope.$watch('vehicles', function (newv, oldv) {
        if (!_.isEmpty(newv)) {
          updateYearSel();
          countCollection();
        }
      });
      $http({
        method: 'POST',
        // method: 'GET',
        url: '{home}/api/',
        // url: 'model.json',
        params: groupParams
      })
      .success(function (data) {
        $scope.base = createTree(cleanData(data));
        // get complete inventory and count by year/model, year/trim, year/color
        $http({
          method: 'POST',
          // method: 'GET',
          url: '{home}/api/',
          // url: 'inventory.json',
          params: inventoryParams
        })
        .success(function (data) {
          $scope.vehicles = splityear(data);
          // $log.info(data.length);
        });
      });
    });
</script>]]></wp:meta_value>
					</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
						<wp:meta_value><![CDATA[page-search-dealer-fdt]]></wp:meta_value>
					</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_su_rich_snippet_type</wp:meta_key>
						<wp:meta_value><![CDATA[none]]></wp:meta_value>
					</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
						<wp:meta_value><![CDATA[page-vehicle-search-fdt-2]]></wp:meta_value>
					</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_edit_last</wp:meta_key>
						<wp:meta_value><![CDATA[8]]></wp:meta_value>
					</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>_wp_old_slug</wp:meta_key>
						<wp:meta_value><![CDATA[menu-vehicle-search-ng]]></wp:meta_value>
					</wp:postmeta>
		<wp:postmeta>
			<wp:meta_key>html_preloop</wp:meta_key>
						<wp:meta_value><![CDATA[<div class="row" ng-app="vehicleModelSearchApp">
<script type="text/ng-template" id="main.html">
<h1>Select a Model</h1>
<div class="row">
  <div class="columns large-3">
    <select ng-model="base.yearSelected" ng-options="obj.yearlabel for obj in base.yearArray"></select>
  </div>
  <div class="columns large-9">
    <ul class="small-block-grid-2 large-block-grid-5">
      <li ng-repeat="ele in baseF.models">
        <a href="#/model/{{ele.model}}"><img ng-src="{{base.ttsrc}}http://cdn.wpdlr.co/assets/vehicles/evox/ext_color/{{ele.evox_vif}}/{{ele.evox_vif}}_cc0640_001_{{ele.ext_color_code}}.png&w=230&h=110&f=2"></a>
        <strong>{{ele.modelLabel}}</strong>
        <br><small><span>{{ele.modelCount}}</span> Vehicles</small>
        <br><small>Starts at <span>${{ele.msrpmodel}}</span> MSRP</small>
      </li>
    </ul>
  </div>
</div>
</script>
  <script type="text/ng-template" id="trim.html">
<h1>Select a Trim</h1>
<div class="row">
  <div class="columns large-3">
    <ul>
      <li>Year: {{base.yearSelected.year}}</li>
      <li>Model: {{subase.current.model.replace('_',' ')}}</li>
    </ul>
  </div>
  <div class="columns large-9">
    <ul class="small-block-grid-2 large-block-grid-5">
      <li ng-repeat="ele in baseF.modelTrim[subase.ele].trimuniq">
        <a href="#/model/{{ele.model}}/trim/{{ele.trim}}"><img ng-src="{{base.ttsrc}}http://cdn.wpdlr.co/assets/vehicles/evox/ext_color/{{ele.evox_vif}}/{{ele.evox_vif}}_cc0640_001_{{ele.ext_color_code}}.png&w=230&h=110&f=2"></a>
        <strong>{{ele.trim}}</strong>
        <br><small><span>{{ele.trimCount}}</span> Vehicles</small>
        <br><small>Starts at <span>${{ele.msrptrim}}</span> MSRP</small>
      </li>
    </ul>
  </div>
</div>
</script>
  <script type="text/ng-template" id="color.html">
<h1>Select a Color</h1>
<div class="row">
  <div class="columns large-3">
    <ul>
      <li>Year: {{base.yearSelected.year}}</li>
      <li>Model: {{subase.current.model.replace('_',' ')}}</li>
      <li>Trim: {{subase.current.trim}}</li>
    </ul>
  </div>
  <div class="columns large-9">
    <ul class="small-block-grid-2 large-block-grid-5">
      <li ng-repeat="ele in baseF.modelTrimColor[subase.ele].colors">
        <a href="#/model/{{ele.model}}/trim/{{ele.trim}}/color/{{ele.ext_color_code}}"><img ng-src="{{base.ttsrc}}http://cdn.wpdlr.co/assets/vehicles/evox/ext_color/{{ele.evox_vif}}/{{ele.evox_vif}}_cc0640_001_{{ele.ext_color_code}}.png&w=230&h=110"></a>
        <strong>{{ele.exterior_color}}</strong>
        <br><small><span>{{ele.colorCount}}</span> Vehicles</small>
        <br><small>Starts at <span>${{ele.msrp}}</span> MSRP</small>
      </li>
    </ul>
  </div>
</div>
</script>
<script type="text/ng-template" id="quote.html">
<h1>Place your quote</h1>
<div class="row">
  <div class="columns large-6">
    <ul>
      <li>Year: <strong>{{subase.sel.year}}</strong></li>
      <li>Model: <strong>{{subase.sel.modelLabel}}</strong></li>
      <li>Trim: <strong>{{subase.sel.trim}}</strong></li>
      <li>Color: <strong>{{subase.sel.exterior_color}}</strong></li>
      <li>MSRP: $<strong>{{subase.sel.msrp}}</strong></li>
      <li><img ng-src="{{base.ttsrc}}http://cdn.wpdlr.co/assets/vehicles/evox/ext_color/{{subase.sel.evox_vif}}/{{subase.sel.evox_vif}}_cc0640_001_{{subase.sel.ext_color_code}}.png&w=640&h=320"></li>
    </ul>
  </div>
  <div class="columns large-6">
    <form name="mquo" action="{{subase.the_permalink}}" method="post" id="{{subase.element_hash}}">
      <p><strong>Personal Information</strong></p>
      <div class="row">
        <div class="columns small-4">
          <label for="first_name">First Name<span ng-show="mquo.first_name.$error.required"> * </span></label>
          <input type="text" id="first_name" name="first_name" ng-model="subase.firstName" required>
        </div>
        <div class="columns small-4">
          <label for="last_name">Last Name<span ng-show="mquo.last_name.$error.required"> * </span></label>
          <input type="text" id="last_name" name="last_name" ng-model="subase.lastName" required>
        </div>
        <div class="columns small-4">
          <label for="email">Email<span ng-show="mquo.email.$error.required"> * </span></label>
          <input type="email" id="email" name="email" ng-model="subase.email" required>
        </div>
      </div>
      <!-- Personal Information -->
      <input type="hidden" name="year" value="{{subase.sel.year}}">
      <input type="hidden" name="model" value="{{subase.sel.modelLabel}}">
      <input type="hidden" name="trim" value="{{subase.sel.trim}}">
      <input type="hidden" name="color" value="{{subase.sel.exterior_color}}">
      <input type="hidden" name="msrp" value="{{subase.sel.msrp}}">
      <!-- Model Information -->
      <p><strong>Quote Type</strong></p>
      <select id="qtype" name="quote_type" ng-model="subase.qtypeSelected">
        <option value="lease">Lease</option>
        <option value="finance">Finance</option>
        <option value="purchase">Purchase</option>
      </select>
      <div ng-if="subase.qtypeSelected === 'lease'" class="row">
        <div class="columns small-4">
          <label for="lease_term">Term</label>
          <select id="lease_term" name="lease_term" ng-model="subase.leaseTerm">
            <option value="24">24 mo.</option>
            <option value="36">36 mo.</option>
            <option value="39">39 mo.</option>
            <option value="42">42 mo.</option>
            <option value="48">48 mo.</option>
          </select>
        </div>
        <div class="columns small-4">
          <label for="miles_year">Miles per year</label>
          <select id="miles_year" name="miles_year" ng-model="subase.milesYear">
            <option value="10,000">10,000 mi.</option>
            <option value="12,000">12,000 mi.</option>
            <option value="15,000">15,000 mi.</option>
            <option value="18,000">18,000 mi.</option>
            <option value="20,000">20,000 mi.</option>
          </select>
        </div>
        <div class="columns small-4">
          <label for="max_down">Max down-payment<span ng-show="mquo.max_down.$error.required"> * </span></label>
          <input type="text" id="max_down" name="max_down" ng-model="subase.maxDown" required>
        </div>
        <div class="columns small-4">
          <label for="credit_rating">Credit Rating</label>
          <select name="credit_rating" ng-model="subase.creditRating">
            <option value="great">Great</option>
            <option value="good">Good</option>
            <option value="soso">So-so</option>
            <option value="notgood">Not so good</option>
          </select>
        </div>
        <div class="columns small-4">
          <label for="additional_equipment">Additional Equipment</label>
          <textarea name="additional_equipment" ng-model="subase.additionalEquipment"></textarea>
        </div>
      </div>
      <div ng-if="subase.qtypeSelected === 'finance'" class="row">
        <div class="columns small-4">
          <label for="finance_term">Term</label>
          <select id="finance_term" name="finance_term" ng-model="subase.financeTerm">
            <option value="24">24 mo.</option>
            <option value="48">48 mo.</option>
            <option value="72">72 mo.</option>
            <option value="96">96 mo.</option>
            <option value="120">120 mo.</option>
            <option value="144">144 mo.</option>
          </select>
        </div>
        <div class="columns small-4">
          <label for="max_down">Max down-payment<span ng-show="mquo.max_down.$error.required"> * </span></label>
          <input type="text" id="max_down" name="max_down" ng-model="subase.maxDown" required>
        </div>
        <div class="columns small-4">
          <label for="credit_rating">Credit Rating</label>
          <select name="credit_rating" ng-model="subase.creditRating">
            <option value="great">Great</option>
            <option value="good">Good</option>
            <option value="soso">So-so</option>
            <option value="notgood">Not so good</option>
          </select>
        </div>
        <div class="columns small-4">
          <label for="additional_equipment">Additional Equipment</label>
          <textarea name="additional_equipment" ng-model="subase.additionalEquipment"></textarea>
        </div>
      </div>
      <div ng-if="subase.qtypeSelected === 'purchase'" class="row">
        <div class="columns small-4">
          <label for="additional_equipment">Additional Equipment</label>
          <textarea name="additional_equipment" ng-model="subase.additionalEquipment"></textarea>
        </div>
      </div>
      <!-- Quote Type -->
      <input type="hidden" name="dForm-ID" value="{{subase.element_hash}}">
      <input type="hidden" name="dForm-Subject" value="Model Quote">
      <input type="submit" name="dForm-Submit" value="Submit">
    </form>
  </div>
</div>
</script>]]></wp:meta_value>
					</wp:postmeta>
	</item>
</channel>
</rss>